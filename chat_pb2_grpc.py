# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import chat_pb2 as chat__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in chat_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatServiceStub(object):
    """Service định nghĩa các RPC methods
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterUser = channel.unary_unary(
                '/chat.ChatService/RegisterUser',
                request_serializer=chat__pb2.RegisterRequest.SerializeToString,
                response_deserializer=chat__pb2.RegisterResponse.FromString,
                _registered_method=True)
        self.LoginUser = channel.unary_unary(
                '/chat.ChatService/LoginUser',
                request_serializer=chat__pb2.LoginRequest.SerializeToString,
                response_deserializer=chat__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.SearchUser = channel.unary_unary(
                '/chat.ChatService/SearchUser',
                request_serializer=chat__pb2.SearchRequest.SerializeToString,
                response_deserializer=chat__pb2.SearchResponse.FromString,
                _registered_method=True)
        self.CreateGroup = channel.unary_unary(
                '/chat.ChatService/CreateGroup',
                request_serializer=chat__pb2.CreateGroupRequest.SerializeToString,
                response_deserializer=chat__pb2.CreateGroupResponse.FromString,
                _registered_method=True)
        self.JoinGroup = channel.unary_unary(
                '/chat.ChatService/JoinGroup',
                request_serializer=chat__pb2.JoinGroupRequest.SerializeToString,
                response_deserializer=chat__pb2.JoinGroupResponse.FromString,
                _registered_method=True)
        self.LeaveGroup = channel.unary_unary(
                '/chat.ChatService/LeaveGroup',
                request_serializer=chat__pb2.LeaveGroupRequest.SerializeToString,
                response_deserializer=chat__pb2.LeaveGroupResponse.FromString,
                _registered_method=True)
        self.SendGroupMessage = channel.unary_unary(
                '/chat.ChatService/SendGroupMessage',
                request_serializer=chat__pb2.GroupMessageRequest.SerializeToString,
                response_deserializer=chat__pb2.MessageResponse.FromString,
                _registered_method=True)
        self.SendPrivateMessage = channel.unary_unary(
                '/chat.ChatService/SendPrivateMessage',
                request_serializer=chat__pb2.PrivateMessageRequest.SerializeToString,
                response_deserializer=chat__pb2.MessageResponse.FromString,
                _registered_method=True)
        self.MessageStream = channel.stream_stream(
                '/chat.ChatService/MessageStream',
                request_serializer=chat__pb2.MessageStreamRequest.SerializeToString,
                response_deserializer=chat__pb2.MessageStreamResponse.FromString,
                _registered_method=True)
        self.GetUserGroups = channel.unary_unary(
                '/chat.ChatService/GetUserGroups',
                request_serializer=chat__pb2.GetUserGroupsRequest.SerializeToString,
                response_deserializer=chat__pb2.GetUserGroupsResponse.FromString,
                _registered_method=True)
        self.GetGroupMembers = channel.unary_unary(
                '/chat.ChatService/GetGroupMembers',
                request_serializer=chat__pb2.GetGroupMembersRequest.SerializeToString,
                response_deserializer=chat__pb2.GetGroupMembersResponse.FromString,
                _registered_method=True)
        self.ListUsers = channel.unary_unary(
                '/chat.ChatService/ListUsers',
                request_serializer=chat__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=chat__pb2.ListUsersResponse.FromString,
                _registered_method=True)
        self.GetGroups = channel.unary_unary(
                '/chat.ChatService/GetGroups',
                request_serializer=chat__pb2.GetGroupsRequest.SerializeToString,
                response_deserializer=chat__pb2.GetGroupsResponse.FromString,
                _registered_method=True)
        self.GetGroupChatHistory = channel.unary_unary(
                '/chat.ChatService/GetGroupChatHistory',
                request_serializer=chat__pb2.GetGroupChatRequest.SerializeToString,
                response_deserializer=chat__pb2.GetGroupChatResponse.FromString,
                _registered_method=True)


class ChatServiceServicer(object):
    """Service định nghĩa các RPC methods
    """

    def RegisterUser(self, request, context):
        """Đăng ký user mới
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginUser(self, request, context):
        """Login
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUser(self, request, context):
        """Tìm kiếm user khác
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateGroup(self, request, context):
        """Tạo nhóm chat
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinGroup(self, request, context):
        """Tham gia nhóm chat
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LeaveGroup(self, request, context):
        """Leave group 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendGroupMessage(self, request, context):
        """Gửi tin nhắn trong nhóm
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendPrivateMessage(self, request, context):
        """Gửi tin nhắn riêng
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MessageStream(self, request_iterator, context):
        """Stream nhận tin nhắn (bidirectional streaming)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserGroups(self, request, context):
        """Lấy danh sách nhóm của user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroupMembers(self, request, context):
        """Lấy danh sách thành viên trong nhóm
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """list user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroups(self, request, context):
        """get all groups
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroupChatHistory(self, request, context):
        """group chat history
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=chat__pb2.RegisterRequest.FromString,
                    response_serializer=chat__pb2.RegisterResponse.SerializeToString,
            ),
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=chat__pb2.LoginRequest.FromString,
                    response_serializer=chat__pb2.LoginResponse.SerializeToString,
            ),
            'SearchUser': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUser,
                    request_deserializer=chat__pb2.SearchRequest.FromString,
                    response_serializer=chat__pb2.SearchResponse.SerializeToString,
            ),
            'CreateGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGroup,
                    request_deserializer=chat__pb2.CreateGroupRequest.FromString,
                    response_serializer=chat__pb2.CreateGroupResponse.SerializeToString,
            ),
            'JoinGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinGroup,
                    request_deserializer=chat__pb2.JoinGroupRequest.FromString,
                    response_serializer=chat__pb2.JoinGroupResponse.SerializeToString,
            ),
            'LeaveGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaveGroup,
                    request_deserializer=chat__pb2.LeaveGroupRequest.FromString,
                    response_serializer=chat__pb2.LeaveGroupResponse.SerializeToString,
            ),
            'SendGroupMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendGroupMessage,
                    request_deserializer=chat__pb2.GroupMessageRequest.FromString,
                    response_serializer=chat__pb2.MessageResponse.SerializeToString,
            ),
            'SendPrivateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendPrivateMessage,
                    request_deserializer=chat__pb2.PrivateMessageRequest.FromString,
                    response_serializer=chat__pb2.MessageResponse.SerializeToString,
            ),
            'MessageStream': grpc.stream_stream_rpc_method_handler(
                    servicer.MessageStream,
                    request_deserializer=chat__pb2.MessageStreamRequest.FromString,
                    response_serializer=chat__pb2.MessageStreamResponse.SerializeToString,
            ),
            'GetUserGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserGroups,
                    request_deserializer=chat__pb2.GetUserGroupsRequest.FromString,
                    response_serializer=chat__pb2.GetUserGroupsResponse.SerializeToString,
            ),
            'GetGroupMembers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroupMembers,
                    request_deserializer=chat__pb2.GetGroupMembersRequest.FromString,
                    response_serializer=chat__pb2.GetGroupMembersResponse.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=chat__pb2.ListUsersRequest.FromString,
                    response_serializer=chat__pb2.ListUsersResponse.SerializeToString,
            ),
            'GetGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroups,
                    request_deserializer=chat__pb2.GetGroupsRequest.FromString,
                    response_serializer=chat__pb2.GetGroupsResponse.SerializeToString,
            ),
            'GetGroupChatHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroupChatHistory,
                    request_deserializer=chat__pb2.GetGroupChatRequest.FromString,
                    response_serializer=chat__pb2.GetGroupChatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Service định nghĩa các RPC methods
    """

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/RegisterUser',
            chat__pb2.RegisterRequest.SerializeToString,
            chat__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/LoginUser',
            chat__pb2.LoginRequest.SerializeToString,
            chat__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SearchUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/SearchUser',
            chat__pb2.SearchRequest.SerializeToString,
            chat__pb2.SearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/CreateGroup',
            chat__pb2.CreateGroupRequest.SerializeToString,
            chat__pb2.CreateGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def JoinGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/JoinGroup',
            chat__pb2.JoinGroupRequest.SerializeToString,
            chat__pb2.JoinGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LeaveGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/LeaveGroup',
            chat__pb2.LeaveGroupRequest.SerializeToString,
            chat__pb2.LeaveGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendGroupMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/SendGroupMessage',
            chat__pb2.GroupMessageRequest.SerializeToString,
            chat__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendPrivateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/SendPrivateMessage',
            chat__pb2.PrivateMessageRequest.SerializeToString,
            chat__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MessageStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/chat.ChatService/MessageStream',
            chat__pb2.MessageStreamRequest.SerializeToString,
            chat__pb2.MessageStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetUserGroups',
            chat__pb2.GetUserGroupsRequest.SerializeToString,
            chat__pb2.GetUserGroupsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGroupMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetGroupMembers',
            chat__pb2.GetGroupMembersRequest.SerializeToString,
            chat__pb2.GetGroupMembersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ListUsers',
            chat__pb2.ListUsersRequest.SerializeToString,
            chat__pb2.ListUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetGroups',
            chat__pb2.GetGroupsRequest.SerializeToString,
            chat__pb2.GetGroupsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGroupChatHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetGroupChatHistory',
            chat__pb2.GetGroupChatRequest.SerializeToString,
            chat__pb2.GetGroupChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
